# SPDX-FileCopyrightText: 2023, Collabora, Ltd.
#
# SPDX-License-Identifier: CC0-1.0
#
# Original author: Rylie Pavlik <rylie.pavlik@collabora.com>

###
# Sample card production config file.
###

# TOML file for ISD lock key storage.
# If a filename is given but does not exist, a random key will be generated and used to lock the card.
# If a filename is given and it does exist, the key in that file is assumed to be the desired one.
#    As long as "locked" is not specified, the card will have its ISD lock keys changed to the key in that file.
#        (Assumes the current keys are the default 404142434445464748494A4B4C4D4E4F)
#    Otherwise we assume the card is already using the keys in that file.
#
# if this is not specified, the card will not have its ISD lock keys changed
# gp_parameters_filename = "samplecard-gp.toml"

# If this is uncommented/set to true, the script assumes the card already had its ISD lock keys changed
# locked = true

# If this is uncommented/set to true, the script will switch the card's ISD lock keys back to the default
# unlock = true

# If this is true, we assume that the GidsApplet is already installed and init'ed.
skip_install = true

# If this file does not exist, it will be generated
# This file contains the pin to actually use the card!
gids_parameters_filename = "samplecard-gids.toml"

# Load as many pkcs12 keys as you want (and as will fit)
# Label is your choice, the stuff under .key describes how to parse the p12 file.
[[key_loading]]
label = "signer_s1"
[key_loading.key]
filename = "../keygen-openxr/id_private/signer_s1_testing_private.p12"
passphrase = "asdfs1"

[[key_loading]]
label = "upload_u1"
[key_loading.key]
filename = "../keygen-openxr/id_private/upload_u1_testing_private.p12"
passphrase = "asdfu1"

[[key_loading]]
label = "signer_s3"
[key_loading.key]
filename = "../keygen-openxr/id_private/signer_s3_testing_private.p12"
passphrase = "asdfs3"
